#!/bin/sh
set -e

. /usr/share/debconf/confmodule

db_get octodash/owning_user
USER="$RET"
db_get octodash/owning_group
GROUP="$RET"


THIS_PACKAGE=octodash
DEFAULT_DISPLAY_MANAGER_FILE=/etc/X11/default-display-manager
DEFAULT_SERVICE=/etc/systemd/system/display-manager.service

# debconf is not a registry, so we only fiddle with the default file if
# the configure script requested an update
if [ -e $DEFAULT_DISPLAY_MANAGER_FILE.debconf-update ]; then
  rm -f $DEFAULT_DISPLAY_MANAGER_FILE.debconf-update
  if db_get shared/default-x-display-manager; then
    # workaround debconf passthru bug (#379198)
    if [ -z "$RET" ]; then
      RET="$THIS_PACKAGE"
    fi
    if [ "$THIS_PACKAGE" != "$RET" ]; then
      echo "Please be sure to run \"dpkg --configure $RET\"."
    fi
    if db_get "$RET"/daemon_name; then
      echo "$RET" > $DEFAULT_DISPLAY_MANAGER_FILE
    fi
  fi
fi


if [ $1 = "configure" ]; then
    if [ -d /etc/systemd/system/ ]; then
        if [ -e "$DEFAULT_DISPLAY_MANAGER_FILE" ]; then
            SERVICE=/lib/systemd/system/$(basename $(cat "$DEFAULT_DISPLAY_MANAGER_FILE") | awk '{print tolower($0)}').service
            echo "Installing service $SERVICE"
            if [ -h "$DEFAULT_SERVICE" ] && [ $(readlink "$DEFAULT_SERVICE") = /dev/null ]; then
                echo "Display manager service is masked" >&2
            elif [ -e "$SERVICE" ]; then
                ln -sf "$SERVICE" "$DEFAULT_SERVICE"
            else
                echo "WARNING: $SERVICE is the selected default display manager but does not exist" >&2
                rm -f "$DEFAULT_SERVICE"
            fi
        else
            rm -f "$DEFAULT_SERVICE"
        fi
    fi


    chown -R $USER:$GROUP /opt/OctoDash
    chmod -R 775 /opt/OctoDash

    sed -i "s/OCTODASH_USER=\w*/OCTODASH_USER=${USER}/g" /etc/default/octodash
    sed -i "s/^#*allowed_users=\w*$/allowed_users=anybody/g" /etc/X11/Xwrapper.config

    systemctl set-default graphical.target
fi

exit 0
